name: Docker Image Build

on:
  pull_request:
    types: [opened, reopened, synchronize, closed]
    branches:
      - main

    paths-ignore:
    - 'docs/**'
    - '.devcontainer/**'
    - '**.md'
    - 'TestFiles/**'

  push:
    branches:
      - main

    paths-ignore:
    - 'docs/**'
    - '.devcontainer/**'
    - '**.md'
    - 'TestFiles/**'

    tags:
      - v*

jobs:

  docker-build-push:

    runs-on: ubuntu-latest
    env:
      # copy the config value to environment variables
      # do not copy the actual secrets!

      DOCKER_REPO: ${{ secrets.DOCKER_REPO }}

      # Used in if: conditions
      DOCKER_SET: false

    steps:
    - uses: actions/checkout@v2

    - name: Set conditions
      run: |
        # check that all Docker secrets are set
        if [[ "${{ secrets.DOCKER_PAT }}" != "" && "${{ secrets.DOCKER_REPO }}" != "" && "${{ secrets.DOCKER_USER }}" != "" ]];
        then
          echo "::set-env name=DOCKER_SET::true"
        fi

    - name: PR Closed
      if: ${{ github.event_name == 'pull_request' && github.event.action == 'closed' && ! github.event.pull_request.merged }}

      run: |

        # handle PR Closed event by building / pushing main branch
        
        # checkout parent branch (usually "main")
        git config pull.ff only
        git fetch --all
        git checkout ${{ github.base_ref }}
        git pull

    - name: PR Merged
      if: ${{ github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged }}

      run: |

        # Do not build on PR Merged
        echo "::set-env name=DOCKER_SET::false"

    - name: Docker Login
      if: ${{ env.DOCKER_SET == 'true' }}
      run: |
        # login to dockerhub
        echo "${{ secrets.DOCKER_PAT }}" | docker login -u ${{ secrets.DOCKER_USER }} --password-stdin

    - name: Build Container
      run: |
        # Build base container
        docker build . -t webv

        # Build debug container
        docker build . -f ./Dockerfile.debug -t webv-debug

    - name: Docker Push
      if: ${{ env.DOCKER_SET == 'true' }}
      run: |
        # tag the base image with :beta
        docker tag webv ${DOCKER_REPO}:beta

        # tag the debug image with :debug
        docker tag webv-debug ${DOCKER_REPO}:debug

        # Tag image based on repo tag if a github label
        if [[ "${{ github.ref }}" == "refs/tags/"* ]]
        then

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          VERSION=$(echo $VERSION | sed -e 's/^v//')

          # tag the image with :Version, :latest and debug-image with :debug
          docker tag webv ${DOCKER_REPO}:$VERSION
          docker tag webv ${DOCKER_REPO}:latest
          docker tag webv-debug ${DOCKER_REPO}:$VERSION-debug
        fi

        # Push to the repo
        docker push $DOCKER_REPO

    - name: Pack and Publish
      run: |

        if [[ "${{ secrets.NUGET_KEY }}" != "" && "${{ github.ref }}" == "refs/tags/"* ]];
        then
          dotnet pack src/webvalidate.sln
          dotnet nuget push src/app/nupkg/ --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_KEY }}
        fi
